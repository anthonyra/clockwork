name: Release

on:
  release:
    types: [published]
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always
  PUBLISH_PREFIX: antegen

jobs:
  release:
    permissions:
      contents: write 
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        include:
          - os: macos-14
            target: x86_64-apple-darwin
          - os: macos-14
            target: aarch64-apple-darwin
          - os: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
    steps:
      - uses: actions/checkout@v4

      - uses: awalsh128/cache-apt-pkgs-action@latest
        if: contains(runner.os, 'linux')
        with:
          packages: jq pkg-config build-essential libudev-dev libssl-dev
          version: 1.0

      - name: Install yq on Linux
        if: contains(runner.os, 'linux')
        run: |
          sudo snap install yq

      - name: Get version from tag
        id: versions
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "tag=dev" >> $GITHUB_OUTPUT
            echo "version=dev" >> $GITHUB_OUTPUT
          else
            TAG=${GITHUB_REF#refs/tags/}
            echo "tag=${TAG}" >> $GITHUB_OUTPUT
            VERSION=${TAG#v}
            echo "version=${VERSION}" >> $GITHUB_OUTPUT
          fi
          echo "solana_version=$(yq -oy '.workspace.dependencies."solana-sdk".version' Cargo.toml)" >> $GITHUB_OUTPUT
          echo "anchor_rev=$(yq -oy '.workspace.dependencies."anchor-lang".rev' Cargo.toml)" >> $GITHUB_OUTPUT
          echo "antegen_version=$(yq -oy '.workspace.package.version' Cargo.toml)" >> $GITHUB_OUTPUT
          echo "rust_version=$(yq -oy '.toolchain.channel' rust-toolchain.toml)" >> $GITHUB_OUTPUT
          echo "commit_full=$(git rev-parse HEAD)" >> $GITHUB_OUTPUT

      - name: Install Rust Stable to use with tools
        uses: actions-rust-lang/setup-rust-toolchain@v1

      - name: Install Solana CLI (beta)
        run: |
          sh -c "$(curl -sSfL https://release.anza.xyz/v${{ steps.versions.outputs.solana_version }}/install)"
          echo "/home/runner/.local/share/solana/install/active_release/bin" >> $GITHUB_PATH

      - name: Install Anchor CLI from git
        uses: baptiste0928/cargo-install@v3
        with:
          crate: anchor-cli
          git: https://github.com/coral-xyz/anchor
          commit: ${{ steps.versions.outputs.anchor_rev }}
      
      - name: Verify installations
        run: |
          source "$HOME/.cargo/env"
          if [[ "${{ matrix.os }}" == "macos-"* ]]; then
            source "$HOME/.bash_profile"
          else
            source "$HOME/.profile"
          fi
          cargo --version
          solana --version
          anchor --version

      - name: Build workspace and programs
        run: |
          source "$HOME/.cargo/env"
          if [[ "${{ matrix.os }}" == "macos-"* ]]; then
            source "$HOME/.bash_profile"
          else
            source "$HOME/.profile"
          fi

          cargo build --workspace --release --target ${{ matrix.target }}
          anchor build

          mkdir -p staging/lib staging/bin
          install -m 644 target/deploy/*.so staging/lib/

          if [[ "${{ matrix.target }}" == *"darwin"* ]]; then
            install -m 644 target/${{ matrix.target }}/release/libantegen_plugin.dylib staging/lib/libantegen_plugin.so
            install -m 755 target/${{ matrix.target }}/release/antegen staging/bin/
          else
            install -m 644 target/${{ matrix.target }}/release/libantegen_plugin.so staging/lib/
            install -m 755 target/${{ matrix.target }}/release/antegen staging/bin/
          fi

          cat > staging/version.yml << EOF
          version: ${{ steps.versions.outputs.version }}
          commit: ${{ steps.versions.outputs.commit_full }}
          target: ${{ matrix.target }}
          EOF

          # Create archive
          cd staging
          tar -cJf ../antegen-${{ steps.versions.outputs.version }}-${{ matrix.target }}.tar.xz *

      - name: Verify tag matches Cargo.toml version
        if: github.event_name != 'workflow_dispatch'
        run: |
          CARGO_VERSION="${{ steps.versions.outputs.antegen_version }}"
          TAG_VERSION="${{ steps.versions.outputs.version }}"
          if [ "$CARGO_VERSION" != "$TAG_VERSION" ]; then
            echo "Error: Tag version ($TAG_VERSION) does not match Cargo.toml version ($CARGO_VERSION)"
            exit 1
          fi

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v2
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fail_on_unmatched_files: true
          tag_name: ${{ steps.versions.outputs.tag }}
          body: |
            # 🚀 Release Details

            ### 🔌 Plugin Version
            - antegen-geyser-plugin `v${{ steps.versions.outputs.antegen_version }}`

            ### ⚡ Runtime Versions
            - 🌟 Solana `${{ steps.versions.outputs.solana_version }}`
            - 🦀 Rust `${{ steps.versions.outputs.rust_version }}`
            - ⚓️ Anchor `${{ steps.versions.outputs.anchor_rev }}`

            ---
            📝 For documentation, visit [docs.antegen.xyz](https://docs.antegen.xyz)
          files: |
            antegen-${{ steps.versions.outputs.version }}*
